crud using shell

PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py shell
Traceback (most recent call last):
  File "F:\pogramming\Django\practise\template engine\template_Engine_pr\manage.py", line 11, in main    
    from django.core.management import execute_from_command_line
ModuleNotFoundError: No module named 'django'

  File "F:\pogramming\Django\practise\template engine\template_Engine_pr\manage.py", line 22, in <module>  
  File "F:\pogramming\Django\practise\template engine\template_Engine_pr\manage.py", line 13, in main      
    raise ImportError(
ImportError: Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?
PS F:\pogramming\Django\practise\template engine\template_Engine_pr> cd ..
PS F:\pogramming\Django\practise\template engine> .\template_engine\Scripts\activate
(template_engine) PS F:\pogramming\Django\practise\template engine> cd .\template_Engine_pr
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py shell        
Python 3.12.3 (tags/v3.12.3:f6650f9, Apr  9 2024, 14:05:25) [MSC v.1938 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from home.models import *
>>> emp=Employee(F_nmae="Anilkumar",L_name="Prajapati",age=24.00,email="prajapatianilkumar012@gmail.com",address="Mumbai",)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: Employee() got unexpected keyword arguments: 'F_nmae'
>>> emp=Employee(F_name="Anilkumar",L_name="Prajapati",age=24.00,email="prajapatianilkumar012@gmail.com",address="Mumbai",)
>>> emp
<Employee: Employee object (None)>
>>> emp.save()
>>> emp
<Employee: Employee object (1)>
>>> emp=Employee.object.create(F_name="Hritika",L_name="Naik",age=21.00,email="hritika012@gmail.com",address="Mumbai",)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Employee' has no attribute 'object'. Did you mean: 'objects'?
>>> emp=Employee.objects.create(F_name="Hritika",L_name="Naik",age=21.00,email="hritika012@gmail.com",address="Mumbai",)
>>> emp
<Employee: Employee object (2)>
>>> Employee.objects.all
<bound method BaseManager.all of <django.db.models.manager.Manager object at 0x0000021B6B046120>>
>>> Employee.objects.all()
<QuerySet [<Employee: Employee object (1)>, <Employee: Employee object (2)>]>
>>> Employee.objects.all()[1]
<Employee: Employee object (2)>
>>> Employee.objects.all()[1].F_name
'Hritika'
>>> Employee.objects.all()[1].email
'hritika012@gmail.com'
>>> Employee.objects.all()[1].id
Use exit() or Ctrl-Z plus Return to exit
>>> exit()
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py makemigrations    
No changes detected
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr>
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py makemigrations    
Traceback (most recent call last):
  File "F:\pogramming\Django\practise\template engine\template_Engine_pr\manage.py", line 22, in <module>
    main()
  File "F:\pogramming\Django\practise\template engine\template_Engine_pr\manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\core\management\__init__.py", line 442, in execute_from_command_line
    utility.execute()
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\core\management\__init__.py", line 416, in execute
    django.setup()
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\apps\registry.py", line 116, in populate
    app_config.import_models()
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\apps\config.py", line 269, 
in import_models
    self.models_module = import_module(models_module_name)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\praja\AppData\Local\Programs\Python\Python312\Lib\importlib\__init__.py", line 90, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1331, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 935, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
    class Car(models.Model):
  File "F:\pogramming\Django\practise\template engine\template_Engine_pr\home\models.py", line 15, in Car
    speed=models.models.DecimalField( max_digits=5, decimal_places=2)
AttributeError: module 'django.db.models' has no attribute 'models'. Did you mean: 'Model'?
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py makemigrations    
Migrations for 'home':
  home\migrations\0004_car.py
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py migrate           
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, home, sessions
Running migrations:
  Applying home.0004_car... OK
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py shell  
Python 3.12.3 (tags/v3.12.3:f6650f9, Apr  9 2024, 14:05:25) [MSC v.1938 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from home.models import *
>>> c=car()      
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'car' is not defined. Did you mean: 'Car'?
>>> c=Car() 
>>> c.save()
Traceback (most recent call last):
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\backends\sqlite3\base.py", line 329, in execute
    return super().execute(query, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
sqlite3.IntegrityError: NOT NULL constraint failed: home_car.speed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 1067, in _save_table
    results = self._do_insert(
              ^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 1108, in _do_insert
    return manager._insert(
           ^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\query.py", line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\sql\compiler.py", line 1823, in execute_sql
    cursor.execute(sql, params)
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
", line 329, in execute
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
django.db.utils.IntegrityError: NOT NULL constraint failed: home_car.speed
>>> exit()
No changes detected
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py makemigrations    
Migrations for 'home':
  home\migrations\0005_delete_car.py
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, home, sessions
Running migrations:
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr>
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py makemigrations    
Migrations for 'home':
  home\migrations\0006_car.py
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py migrate           
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, home, sessions
Running migrations:
  Applying home.0006_car... OK
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py shell             
Python 3.12.3 (tags/v3.12.3:f6650f9, Apr  9 2024, 14:05:25) [MSC v.1938 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> c=Car()                  
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Car' is not defined
>>> c=car()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'car' is not defined. Did you mean: 'chr'?
>>> ca=Car()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Car' is not defined
>>> car = Car()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Car' is not defined
>>> c=Car('supra')
  File "<console>", line 1, in <module>
>>> exit
Use exit() or Ctrl-Z plus Return to exit
>>> exit()
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py makemigrations    
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py migrate           
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, home, sessions
Running migrations:
  No migrations to apply.
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py shell             
Python 3.12.3 (tags/v3.12.3:f6650f9, Apr  9 2024, 14:05:25) [MSC v.1938 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from home.models import *  
>>> c=Car()
>>> c.save()
>>> c
<Car: Car object (1)>
>>> c=Car('supra',299)
>>> c.save()   
Traceback (most recent call last):
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\fields\__init__.py", line 2117, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: 'supra'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 822, in save
    self.save_base(
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 909, in save_base
    updated = self._save_table(
              ^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 1036, in _save_table
    updated = self._do_update(
              ^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\base.py", line 1080, in _do_update
    filtered = base_qs.filter(pk=pk_val)
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\query.py", line 1476, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\query.py", line 1494, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\query.py", line 1501, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\sql\query.py", line 1613, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\sql\query.py", line 1645, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\sql\query.py", line 1559, in build_filter
    condition = self.build_lookup(lookups, col, value)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\sql\query.py", line 1389, in build_lookup
    lookup = lookup_class(lhs, rhs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\lookups.py", line 30, in __init__
    self.rhs = self.get_prep_lookup()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\lookups.py", line 364, in get_prep_lookup
    return super().get_prep_lookup()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\lookups.py", line 88, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\fields\__init__.py", line 2119, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got 'supra'.
>>> c=Car(c_name='supra',speed=299) 
>>> c.save()
>>> c
<Car: Car object (2)>
>>> c=Car(c_name='skyline',speed=299)
>>> c.save()
>>> c_dict{'c_name':'dodge','speed':250}
  File "<console>", line 1
    c_dict{'c_name':'dodge','speed':250}
          ^
SyntaxError: invalid syntax
>>> c_dict={'c_name':'dodge','speed':250} 
>>> car.objects.create(**c_dict)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'car' is not defined. Did you mean: 'Car'?
>>> Car.objects.create(**c_dict)
<Car: Car object (4)>
>>> c
<Car: Car object (3)>
>>> x
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'x' is not defined
>>> c
<Car: Car object (3)>
>>> Car.objects.all()
<QuerySet [<Car: Car object (1)>, <Car: Car object (2)>, <Car: Car object (3)>, <Car: Car object (4)>]>  
>>> exit()
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py makemigrations
No changes detected
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py shell
Python 3.12.3 (tags/v3.12.3:f6650f9, Apr  9 2024, 14:05:25) [MSC v.1938 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from home.models import *
>>> car()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'car' is not defined. Did you mean: 'Car'?
>>> Car
<class 'home.models.Car'>
>>> Car() 
<Car: carname is  and max speed is 30>
>>> Car.objects.all()
rname is skyline and max speed is 299>, <Car: carname is dodge and max speed is 250>]>
>>> Car.objects.all()
<QuerySet [<Car: carname is  and max speed is 30>, <Car: carname is supra and max speed is 299>, <Car: carname is skyline and max speed is 299>, <Car: carname is dodge and max speed is 250>]>
>>> Car.objects.all()
<QuerySet [<Car: carname is  and max speed is 30>, <Car: carname is supra and max speed is 299>, <Car: carname is skyline and max speed is 299>, <Car: carname is dodge and max speed is 250>]>
>>> exit
Use exit() or Ctrl-Z plus Return to exit
>>> exit()
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> python manage.py shell
Python 3.12.3 (tags/v3.12.3:f6650f9, Apr  9 2024, 14:05:25) [MSC v.1938 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> Car.objects.all() 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Car' is not defined
>>> from models.home import *  
Traceback (most recent call last):
  File "<console>", line 1, in <module>
ModuleNotFoundError: No module named 'models'
>>> from home.models import * 
>>> Car.objects.all()
<QuerySet [<Car: >, <Car: supra>, <Car: skyline>, <Car: dodge>]>
>>> for c in car:  
... print(f"car name is{c_name} and its top speed is {speed}"
  File "<console>", line 2
    print(f"car name is{c_name} and its top speed is {speed}"
    ^^^^^
IndentationError: expected an indented block after 'for' statement on line 1
>>> for c in car:
...     print(f"car name is{c_name} and its top speed is {speed}"
... 
... 
KeyboardInterrupt
>>> for c in car:
... ...     print(f"car name is{c_name} and its top speed is {speed}"
  File "<console>", line 2
    ...     print(f"car name is{c_name} and its top speed is {speed}"
    ^^^
IndentationError: expected an indented block after 'for' statement on line 1
>>> ... for c in car:
  File "<console>", line 1
    ... for c in car:
        ^^^
SyntaxError: invalid syntax
>>> ...     print(f"car name is{c_name} and its top speed is {speed}"
  File "<console>", line 1
    ...     print(f"car name is{c_name} and its top speed is {speed}"
                 ^
SyntaxError: '(' was never closed
>>> ... for c in car:
  File "<console>", line 1
    ... for c in car:
        ^^^
SyntaxError: invalid syntax
>>> ... for c in car:
  File "<console>", line 1
    ... for c in car:
        ^^^
SyntaxError: invalid syntax
>>>
>>> 
>>> for c in car:     
...      print(f"car name is{c.c_name} and its top speed is {c.speed}")    
... 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'car' is not defined. Did you mean: 'Car'?
>>>
>>> for c in Car:                                                   }")
...     print(f"car name is{c.c_name} and its top speed is {c.speed}")    
... 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: 'ModelBase' object is not iterable
>>> cars=car.objects.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'car' is not defined. Did you mean: 'Car'?
>>> cars=Car.objects.all() 
>>> for c in cars:                                                        
...     print(f"car name is{c.c_name} and its top speed is {c.speed}")    
... 
car name is and its top speed is 30
car name issupra and its top speed is 299
car name isskyline and its top speed is 299
car name isdodge and its top speed is 250
>>> for c in cars:
... ...     print(f"{c.id} car name is {c.c_name} and its top speed is {c.speed}")     
  File "<console>", line 2
    ...     print(f"{c.id} car name is {c.c_name} and its top speed is {c.speed}")
    ^^^
IndentationError: expected an indented block after 'for' statement on line 1
>>>
>>> for c in cars:                                                                    
...     print(f"{c.id} car name is {c.c_name} and its top speed is {c.speed}")              
... 
1 car name is  and its top speed is 30
2 car name is supra and its top speed is 299
3 car name is skyline and its top speed is 299
4 car name is dodge and its top speed is 250
>>> car=Car.objects.get(id=1) 
>>> 
>>> car=Car.objects.get(id=1)
>>> car
<Car: >
>>> Car.objects.get(id=2)
<Car: supra>
>>> Car.objects.filter(id=2) 
<QuerySet [<Car: supra>]>
>>> Car.objects.filter(id=10)
<QuerySet []>
>>> car=Car.objects.get(id=1)
>>> car.c_name="charger"
>>> car.speed=269
>>> car.objects.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "F:\pogramming\Django\practise\template engine\template_engine\Lib\site-packages\django\db\models\manager.py", line 186, in __get__
    raise AttributeError(
AttributeError: Manager isn't accessible via Car instances
>>> Car.objects.all
<bound method BaseManager.all of <django.db.models.manager.Manager object at 0x00000153E8DE9A00>>
>>> Car.objects.all()
<QuerySet [<Car: >, <Car: supra>, <Car: skyline>, <Car: dodge>]>
>>> car.save()
>>> Car.objects.all()
<QuerySet [<Car: charger>, <Car: supra>, <Car: skyline>, <Car: dodge>]>
>>> Ca.objects.all(id=1).update(c_name="hell charger")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Ca' is not defined
>>> Car.objects.all(id=1).update(c_name="hell charger") 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: BaseManager.all() got an unexpected keyword argument 'id'
>>> Car.objects.filter(id=1).update(c_name="hell charger")  
1
>>> Car.objects.all()
<QuerySet [<Car: hell charger>, <Car: supra>, <Car: skyline>, <Car: dodge>]>
>>> Car.object.get(id=1).delete()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Car' has no attribute 'object'. Did you mean: 'objects'?
>>> Car.objects.get(id=1).delete() 
(1, {'home.Car': 1})
>>> Car.objects.all()
<QuerySet [<Car: supra>, <Car: skyline>, <Car: dodge>]>
>>> exit()
(template_engine) PS F:\pogramming\Django\practise\template engine\template_Engine_pr> 